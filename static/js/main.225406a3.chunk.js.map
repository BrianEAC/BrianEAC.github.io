{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["SubmitForm","moneyNumber","moneyChange","typeName","typeChange","submit","handleChange","checked","thisClass","className","onSubmit","type","id","name","onChange","htmlFor","value","min","step","required","Movements","movementType","map","mov","description","Total","incomes","expenses","App","useState","movements","setMovements","setIncome","setExpense","expenseName","setExpenseName","money","setMoney","isChecked","setChecked","getIncomes","reduce","a","b","getExpenses","e","Number","target","preventDefault","incomeObject","concat","expenseObject","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAGMA,EAAa,SAAC,GASb,IARLC,EAQI,EARJA,YACAC,EAOI,EAPJA,YACAC,EAMI,EANJA,SACAC,EAKI,EALJA,WACAC,EAII,EAJJA,OACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,QACAC,EACI,EADJA,UAEA,OACE,qBAAKC,UAAU,aAAf,SACE,uBAAMC,SAAUL,EAAQI,UAAWD,EAAnC,UACE,sBAAKC,UAAU,QAAf,UACE,uBACEE,KAAK,QACLC,GAAG,YACHC,KAAK,aACLC,SAAUR,EACVC,QAASA,IAEX,uBAAOQ,QAAQ,YAAf,oBACA,uBACEJ,KAAK,QACLC,GAAG,YACHC,KAAK,aACLC,SAAUR,EACVC,SAAUA,IAEZ,uBAAOQ,QAAQ,YAAf,wBAEF,4CAEE,uBACEC,MAAOf,EACPa,SAAUZ,EACVS,KAAK,SACLC,GAAG,iBACHK,IAAI,IACJC,KAAK,MACLC,UAAQ,OAGZ,gDACe,uBAAOH,MAAOb,EAAUW,SAAUV,EAAYe,UAAQ,OAErE,wBAAQR,KAAK,SAAb,uBAMFS,EAAY,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,aAAcZ,EAAgB,EAAhBA,UACjC,OAAOY,EAAaC,KAAI,SAACC,GAAD,OACtB,qBAAId,UAAWA,EAAf,UACE,6BAAKc,EAAIC,cADX,IAC6B,mCAAMD,EAAIP,MAAV,OAC3B,6BAAKO,EAAIZ,cAKTc,EAAQ,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SACxB,OACE,8BACE,qBAAIlB,UAAU,QAAd,UACE,2CAAciB,KACd,4CAAeC,KACf,yCAAYD,EAAUC,WAsFfC,MAhFf,WACE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA6BF,mBAAS,IAAtC,mBAAOH,EAAP,KAAgBM,EAAhB,KACA,EAA+BH,mBAAS,IAAxC,mBAAOF,EAAP,KAAiBM,EAAjB,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAAgCR,oBAAS,GAAzC,mBAAOS,EAAP,KAAkBC,EAAlB,KAkCMC,EAAad,EAAQe,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,EAAE3B,QAAO,GAEnD4B,EAAcjB,EAASc,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,EAAE3B,QAAO,GAQ3D,OAEE,sBAAKP,UAAU,IAAf,UACE,qBAAKA,UAAU,SAAf,SACE,2CAGF,sBAAKA,UAAU,MAAf,UACE,mDACA,cAAC,EAAD,CACEN,SAAU+B,EACVjC,YAAamC,EACblC,YAlDY,SAAC2C,GACnBR,EAASS,OAAOD,EAAEE,OAAO/B,SAkDnBT,QAAS+B,EACThC,aApBa,SAACuC,GACpBN,GAAYD,IAoBNlC,WAzDW,SAACyC,GAClBV,EAAeU,EAAEE,OAAO/B,QAyDlBX,OAnDO,SAACwC,GAEd,GADAA,EAAEG,iBACEV,EAAW,CACb,IAAMW,EAAe,CACnBzB,YAAaU,EACblB,MAAOoB,EACPzB,KAAM,UAERqB,EAAUN,EAAQwB,OAAOD,IACzBZ,EAAS,IACTF,EAAe,IACfJ,EAAaD,EAAUoB,OAAOD,QACzB,CACL,IAAME,EAAgB,CACpB3B,YAAaU,EACblB,MAAOoB,EACPzB,KAAM,WAERsB,EAAWN,EAASuB,OAAOC,IAC3Bd,EAAS,IACTF,EAAe,IACfJ,EAAaD,EAAUoB,OAAOC,QAgC5B,qBAAK1C,UAAU,YAAf,SACE,cAAC,EAAD,CAAWY,aAAcS,EAAWrB,UAAU,gBAEhD,gCACE,kDADF,IAEE,cAAC,EAAD,CAAOiB,QAASc,EAAYb,SAAUiB,cCzIjCQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.225406a3.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nconst SubmitForm = ({\n  moneyNumber,\n  moneyChange,\n  typeName,\n  typeChange,\n  submit,\n  handleChange,\n  checked,\n  thisClass,\n}) => {\n  return (\n    <div className=\"formButton\">\n      <form onSubmit={submit} className={thisClass}>\n        <div className=\"radio\">\n          <input\n            type=\"radio\"\n            id=\"radio-one\"\n            name=\"switch-one\"\n            onChange={handleChange}\n            checked={checked}\n          />\n          <label htmlFor=\"radio-one\">Income</label>\n          <input\n            type=\"radio\"\n            id=\"radio-two\"\n            name=\"switch-one\"\n            onChange={handleChange}\n            checked={!checked}\n          />\n          <label htmlFor=\"radio-two\">Excome </label>\n        </div>\n        <div>\n          Amount: $\n          <input\n            value={moneyNumber}\n            onChange={moneyChange}\n            type=\"number\"\n            id=\"currency-input\"\n            min=\"1\"\n            step=\"any\"\n            required\n          />\n        </div>\n        <div>\n          Description: <input value={typeName} onChange={typeChange} required />\n        </div>\n        <button type=\"submit\">add</button>\n      </form>\n    </div>\n  );\n};\n\nconst Movements = ({ movementType, className }) => {\n  return movementType.map((mov) => (\n    <ul className={className}>\n      <h3>{mov.description}</h3> <li>${mov.value} </li>\n      <li>{mov.type}</li>\n    </ul>\n  ));\n};\n\nconst Total = ({ incomes, expenses }) => {\n  return (\n    <div>\n      <ul className=\"total\">\n        <li>Incomes: {incomes}</li>\n        <li>Expenses: {expenses}</li>\n        <li>Total: {incomes - expenses}</li>\n      </ul>\n    </div>\n  );\n};\n\nfunction App() {\n  const [movements, setMovements] = useState([]);\n  const [incomes, setIncome] = useState([]);\n  const [expenses, setExpense] = useState([]);\n  const [expenseName, setExpenseName] = useState(\"\");\n  const [money, setMoney] = useState(\"\");\n  const [isChecked, setChecked] = useState(true); //\n\n  const handleType = (e) => {\n    setExpenseName(e.target.value);\n  };\n\n  const handleMoney = (e) => {\n    setMoney(Number(e.target.value));\n  };\n  const addNew = (e) => {\n    e.preventDefault();\n    if (isChecked) {\n      const incomeObject = {\n        description: expenseName,\n        value: money,\n        type: \"income\",\n      };\n      setIncome(incomes.concat(incomeObject));\n      setMoney(\"\");\n      setExpenseName(\"\");\n      setMovements(movements.concat(incomeObject));\n    } else {\n      const expenseObject = {\n        description: expenseName,\n        value: money,\n        type: \"expense\",\n      };\n      setExpense(expenses.concat(expenseObject));\n      setMoney(\"\");\n      setExpenseName(\"\");\n      setMovements(movements.concat(expenseObject));\n    }\n  };\n\n  const getIncomes = incomes.reduce((a, b) => a + b.value, 0);\n\n  const getExpenses = expenses.reduce((a, b) => a + b.value, 0);\n\n  const handleChange = (e) => {\n    setChecked(!isChecked);\n  };\n\n    \n\n  return (\n    \n    <div className='d'>\n      <div className=\"header\">\n        <h1>Stingy!</h1>\n      </div>\n\n      <div className=\"App\">\n        <h2>Add new movement:</h2>\n        <SubmitForm\n          typeName={expenseName}\n          moneyNumber={money}\n          moneyChange={handleMoney}\n          checked={isChecked}\n          handleChange={handleChange}\n          typeChange={handleType}\n          submit={addNew}\n        />\n        <div className=\"movements\">\n          <Movements movementType={movements} className=\"movDetail\" />\n        </div>\n        <div>\n          <h2>Total movements:</h2>.\n          <Total incomes={getIncomes} expenses={getExpenses} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}